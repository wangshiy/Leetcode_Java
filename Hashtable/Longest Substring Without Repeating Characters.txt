Given a string, find the length of the longest substring without repeating characters. 
For example, the longest substring without repeating letters for "abcabcbb" is "abc", which the length is 3. For "bbbbb" the longest substring is "b", with the length of 1.

Tags: Hashtable two pointers string

1. 维护一个窗口， 右窗口一直移动到出现重复于hashset的字符位置为止
2. 重新移动左窗口，直到找到出现与右窗口相同字符的位置，并不断更新hashset
3. 下一次左窗口开始的位置将更新为导致重复字符的下一位开始

public class Solution {
    public int lengthOfLongestSubstring(String s) {
	
        if (s == null || s.length() == 0){
			return 0;
		}
		
		HashSet<Character> set = new HashSet<Character>();
		
		int max = 0;
		int left = 0;
		int right = 0;
		
		while(right < s.length()){
		
			if (set.contains(s.charAt(right))){
				if (max < right - left){
					max = right - left;
				}
				while(s.charAt(left) != s.charAt(right)){
					set.remove(s.charAt(left));
					left++;
				}
				left++;
			}else{
				set.add(s.charAt(right));
			}
			
			right++;
		}
		
		max = Math.max(max, right - left);
		
		return max;
    }
}

